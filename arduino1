#include <SoftwareSerial.h>
#include <Wire.h> // For master/slave
#include <SharpIR.h>

#define IR A0 // define signal pin
#define model 1080 // used 1080 because model GP2Y0A21YK0F is used
SharpIR SharpIR(IR, model);

// CONSTANTS

const int BLUE_PORT = 7;
const int RED_PORT = 8;
const int YELLOW_PORT = 9;
const int GREEN_PORT = 10;

const int BLUE_BUTTON = A0;
const int RED_BUTTON = A1;
const int GREEN_BUTTON = A2;
const int YELLOW_BUTTON = A3;

const int ANALOG_VAL = 25;

// SIGNAL CONSTANTS

const int TIME_SETTER = 1;
const int HOUR_UP = 2;
const int HOUR_TO_MIN = 3;
const int MINUTE_UP = 4;
const int EXIT_TIME_SETTER = 5;

const int ALARM_SETTER = 6;
const int ALARM_HOUR_UP = 7;
const int ALARM_HOUR_TO_MIN = 8;
const int ALARM_MINUTE_UP = 9;
const int EXIT_ALARM_SETTER = 10;

const int ALARM_ON = 11;
const int ALARM_OFF = 12;

const int MOTORS_OFF = 13;

const int UNIVERSAL_ON = 14;

// GLOBAL VARIABLES

int alarmHour = 13;
int alarmMin = 61;
int counter = 0;
int h = 0;
int m = 0;
int s = 0;
int ms = 0;
String timeOfDay = "am";
boolean alarmOn = true;
boolean clockOn = false;

void setup() {
  // put your setup code here, to run once:
  Wire.begin(); // join i2c bus (address optional for master)
  
  Serial.begin(9600);
  Serial.println("TIME TELLER");
  
  pinMode(BLUE_PORT, OUTPUT); // Blue
  pinMode(RED_PORT, OUTPUT); // Red
  pinMode(YELLOW_PORT, OUTPUT); // Yellow
  pinMode(GREEN_PORT, OUTPUT); // Green
}

void countUp() {
  counter++;
  Serial.println(counter);
}

void loop() {
  while(counter < 200 && !clockOn){
    counter = 0;

    while(analogRead(RED_BUTTON) <= ANALOG_VAL && counter < 200) {
      countUp();
    }

    if(counter == 200) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(UNIVERSAL_ON);
      Wire.endTransmission(true);    // stop 

      clockOn = true;
      delay(1000);
    }
  }
  
  counter = 0;
  
  while(analogRead(BLUE_BUTTON) <= ANALOG_VAL && counter < 200) {
    digitalWrite(BLUE_PORT, HIGH);
    digitalWrite(RED_PORT, LOW);
    digitalWrite(YELLOW_PORT, LOW);
    digitalWrite(GREEN_PORT, LOW);

    countUp();
  }

  if(counter == 200) {
    Wire.beginTransmission(2); // transmit to device #2
    Wire.write(TIME_SETTER);
    Wire.endTransmission(true);    // stop 
    delay(1000);
      
    Serial.println("Message sent...");
    timeSetterMode();
  }
  
  counter = 0;
  
  while(analogRead(RED_BUTTON) <= ANALOG_VAL && counter < 200) {
    digitalWrite(RED_PORT, HIGH);
    digitalWrite(BLUE_PORT, LOW);
    digitalWrite(YELLOW_PORT, LOW);
    digitalWrite(GREEN_PORT, LOW);

    countUp();
  }

  if(counter == 200) {
    Wire.beginTransmission(2); // transmit to device #2
    Wire.write(ALARM_ON);
    Wire.endTransmission(true);    // stop 
    delay(1000);
      
    Serial.println("Message sent...");
  }
  
  counter = 0;
  
  while (analogRead(GREEN_BUTTON) <= ANALOG_VAL && counter < 200) {
    digitalWrite(GREEN_PORT, HIGH);
    digitalWrite(BLUE_PORT, LOW);
    digitalWrite(RED_PORT, LOW);
    digitalWrite(YELLOW_PORT, LOW);

    countUp();
  }

  if(counter == 200) {
    Wire.beginTransmission(2); // transmit to device #2
    Wire.write(ALARM_SETTER);
    Wire.endTransmission(true);    // stop 
    delay(1000);
      
    Serial.println("Message sent...");
    alarmSetterMode();
  }
  
  counter = 0;
  
  while (analogRead(YELLOW_BUTTON) <= ANALOG_VAL && counter < 200) {
    digitalWrite(YELLOW_PORT, HIGH);
    digitalWrite(BLUE_PORT, LOW);
    digitalWrite(RED_PORT, LOW);
    digitalWrite(GREEN_PORT, LOW);

    countUp();
  }

  if(counter == 200) {
    Wire.beginTransmission(2); // transmit to device #2
    Wire.write(ALARM_OFF);
    Wire.endTransmission(true);    // stop 
    delay(1000);
      
    Serial.println("Message sent...");
  }
  
  digitalWrite(BLUE_PORT, LOW);
  digitalWrite(RED_PORT, LOW);
  digitalWrite(YELLOW_PORT, LOW);
  digitalWrite(GREEN_PORT, LOW); 
    
  Serial.print(analogRead(A0));
  Serial.print("    ");
  Serial.print(analogRead(A1));
  Serial.print("    ");
  Serial.print(analogRead(A2));
  Serial.print("    ");
  Serial.println(analogRead(A3));
/*
  if(SharpIR.distance() == 4){
    Wire.beginTransmission(2); // transmit to device #2
    Wire.write(MOTORS_OFF);
    Wire.endTransmission(true);    // stop 

    Serial.println("Nice.");
    delay(1000);
    
  }*/
}

void setAlarm(int hour, int mins) {
  alarmHour = hour;
  alarmMin = mins;
}

void setTime(int hours, int mins) {
  h = hours;
  m = mins;
}

void checkAlarm(int hours, int mins) {
  if (alarmHour == hours && alarmMin == mins){
    Serial.println("ALARM");
  }
}

void timeSetterMode() {
  int startTime = millis();
  boolean buttonPushed = false;
  boolean firstRun = true;
  boolean switchMethod = false;

  // Changing the hour
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(BLUE_BUTTON) >= ANALOG_VAL) {
        firstRun = false;
        delay(100);
      }
    }
    
    while(analogRead(BLUE_BUTTON) <= ANALOG_VAL && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(HOUR_UP);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  } 

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(HOUR_TO_MIN);
  Wire.endTransmission(true);    // stop

  switchMethod = false;
  firstRun = true;
  buttonPushed = false;

  // Changing the minutes
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(BLUE_BUTTON) >= ANALOG_VAL) {
        firstRun = false;
        delay(100);
      }
    }

    while(analogRead(BLUE_BUTTON) <= ANALOG_VAL && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(MINUTE_UP);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  }

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(EXIT_TIME_SETTER);
  Wire.endTransmission(true);    // stop  
}

void alarmSetterMode() {
  boolean buttonPushed = false;
  boolean firstRun = true;
  boolean switchMethod = false;

  // Changing the hour
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(GREEN_BUTTON) >= ANALOG_VAL) {
        firstRun = false;
        delay(100);
      }
    }
    
    while(analogRead(GREEN_BUTTON) <= ANALOG_VAL && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(ALARM_HOUR_UP);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  } 

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(ALARM_HOUR_TO_MIN);
  Wire.endTransmission(true);    // stop

  switchMethod = false;
  firstRun = true;
  buttonPushed = false;

  // Changing the minutes
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(GREEN_BUTTON) >= ANALOG_VAL) {
        firstRun = false;
        delay(100);
      }
    }

    while(analogRead(GREEN_BUTTON) <= ANALOG_VAL && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(ALARM_MINUTE_UP);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  }

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(EXIT_ALARM_SETTER);
  Wire.endTransmission(true);    // stop  
}

void checkTime() {
  if(s == 60) {
    m++;
    s = 0;
  }

  if(m == 60) {
    h++;
    m = 0;
  }

  if(h == 13) {
    h = 1;
    if (timeOfDay == "am") {
      timeOfDay = "pm";
    } else {
      timeOfDay = "am";
    }
  }
}
