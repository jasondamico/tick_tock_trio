#include <SoftwareSerial.h>
#include <Wire.h> // For master/slave

// CONSTANTS

int BLUE_PORT = 7;
int RED_PORT = 8;
int YELLOW_PORT = 9;
int GREEN_PORT = 10;

int BLUE_BUTTON = A0;
int RED_BUTTON = A1;
int GREEN_BUTTON = A2;
int YELLOW_BUTTON = A3;

// GLOBAL VARIABLES

int alarmHour = 13;
int alarmMin = 61;
int counter = 0;
int h = 0;
int m = 0;
int s = 0;
int ms = 0;
String timeOfDay = "am";

void setup() {
  // put your setup code here, to run once:
  Wire.begin(); // join i2c bus (address optional for master)
  
  Serial.begin(9600);
  Serial.println("TIME TELLER");
  
  pinMode(BLUE_PORT, OUTPUT); // Blue
  pinMode(RED_PORT, OUTPUT); // Red
  pinMode(YELLOW_PORT, OUTPUT); // Yellow
  pinMode(GREEN_PORT, OUTPUT); // Green
/*
  LCD.begin(9600); // set up serial port for 9600 baud
  delay(500); // wait for display to boot up*/
}

void countUp() {
  counter++;
  Serial.println(counter);

  // Takes roughly 5x the amount of time specified
  /*
  if(counter == (toCount / 5)) {
    digitalWrite(BLUE_PORT, HIGH);
    digitalWrite(RED_PORT, HIGH);
    digitalWrite(YELLOW_PORT, HIGH);
    digitalWrite(GREEN_PORT, HIGH);


    delay(1000);
  }*/
}

void loop() {
  counter = 0;
  
  while(analogRead(BLUE_BUTTON) == 0 && counter < 200) {
    digitalWrite(BLUE_PORT, HIGH);
    digitalWrite(RED_PORT, LOW);
    digitalWrite(YELLOW_PORT, LOW);
    digitalWrite(GREEN_PORT, LOW);

    countUp();
  }

  

  if(counter == 200) {
    Wire.beginTransmission(2); // transmit to device #2
    Wire.write(1);
    Wire.endTransmission(true);    // stop 
    delay(1000);
      
    Serial.println("Message sent...");
    timeSetterMode();
  }
  
  counter = 0;
  
  while(analogRead(RED_BUTTON) == 0) {
    digitalWrite(RED_PORT, HIGH);
    digitalWrite(BLUE_PORT, LOW);
    digitalWrite(YELLOW_PORT, LOW);
    digitalWrite(GREEN_PORT, LOW);

    countUp();
  }
  
  counter = 0;
  
  while (analogRead(GREEN_BUTTON) == 0 && counter < 200) {
    digitalWrite(GREEN_PORT, HIGH);
    digitalWrite(BLUE_PORT, LOW);
    digitalWrite(RED_PORT, LOW);
    digitalWrite(YELLOW_PORT, LOW);

    countUp();
  }

  if(counter == 200) {
    Wire.beginTransmission(2); // transmit to device #2
    Wire.write(6);
    Wire.endTransmission(true);    // stop 
    delay(1000);
      
    Serial.println("Message sent...");
    alarmSetterMode();
  }
  
  counter = 0;
  
  while (analogRead(YELLOW_BUTTON) == 0) {
    digitalWrite(YELLOW_PORT, HIGH);
    digitalWrite(BLUE_PORT, LOW);
    digitalWrite(RED_PORT, LOW);
    digitalWrite(GREEN_PORT, LOW);

    countUp();
  }
  digitalWrite(BLUE_PORT, LOW);
  digitalWrite(RED_PORT, LOW);
  digitalWrite(YELLOW_PORT, LOW);
  digitalWrite(GREEN_PORT, LOW); 
    
  Serial.print(analogRead(A0));
  Serial.print("    ");
  Serial.print(analogRead(A1));
  Serial.print("    ");
  Serial.print(analogRead(A2));
  Serial.print("    ");
  Serial.println(analogRead(A3));
}

void setAlarm(int hour, int mins) {
  alarmHour = hour;
  alarmMin = mins;
}

void setTime(int hours, int mins) {
  h = hours;
  m = mins;
}

void checkAlarm(int hours, int mins) {
  if (alarmHour == hours && alarmMin == mins){
    Serial.println("ALARM");
  }
}

// LCD FUNCTIONS
/*
/* 16 spaces 
void clearLCD() {
  LCD.write("                ");
  LCD.write("                ");
}

void toFirstLine() {
  LCD.write(254); 
  LCD.write(128);
}

void toSecondLine() {
  LCD.write(254);
  LCD.write(192);
}

void resetLCD() {
  clearLCD();
  toFirstLine();
}

void playAlarm(int level) {
  resetLCD();
  LCD.write("WAKE UP!");
  
  if(level == 1) {
    digitalWrite(GREEN_PORT, HIGH); // Green
  } 
  else if (level == 2) {
    digitalWrite(YELLOW_PORT, HIGH); // Yellow
  }
  else if (level == 3) {
    digitalWrite(RED_PORT, HIGH); // Red
  }
}
*/

void timeSetterMode() {
  boolean buttonPushed = false;
  boolean firstRun = true;
  boolean switchMethod = false;

  // Changing the hour
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(BLUE_BUTTON) != 0) {
        firstRun = false;
        delay(100);
      }
    }
    
    while(analogRead(BLUE_BUTTON) == 0 && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(2);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  } 

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(3);
  Wire.endTransmission(true);    // stop

  switchMethod = false;
  firstRun = true;
  buttonPushed = false;

  // Changing the minutes
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(BLUE_BUTTON) != 0) {
        firstRun = false;
        delay(100);
      }
    }

    while(analogRead(BLUE_BUTTON) == 0 && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(4);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  }

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(5);
  Wire.endTransmission(true);    // stop  
}

void alarmSetterMode() {
  boolean buttonPushed = false;
  boolean firstRun = true;
  boolean switchMethod = false;

  // Changing the hour
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(GREEN_BUTTON) != 0) {
        firstRun = false;
        delay(100);
      }
    }
    
    while(analogRead(GREEN_BUTTON) == 0 && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(7);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  } 

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(8);
  Wire.endTransmission(true);    // stop

  switchMethod = false;
  firstRun = true;
  buttonPushed = false;

  // Changing the minutes
  while(!switchMethod) {
    while(firstRun) {
      if(analogRead(GREEN_BUTTON) != 0) {
        firstRun = false;
        delay(100);
      }
    }

    while(analogRead(GREEN_BUTTON) == 0 && !switchMethod) {
      countUp();
      if(counter >= 20){
        buttonPushed = true;
      }

      if(counter >= 600) {
        switchMethod = true;
      }
    } 

    if (buttonPushed && counter < 600) {
      Wire.beginTransmission(2); // transmit to device #2
      Wire.write(9);
      Wire.endTransmission(true);    // stop 

      buttonPushed = false;
    }

    counter = 0;
  }

  Wire.beginTransmission(2); // transmit to device #2
  Wire.write(10);
  Wire.endTransmission(true);    // stop  
}

void checkTime() {
  if(s == 60) {
    m++;
    s = 0;
  }

  if(m == 60) {
    h++;
    m = 0;
  }

  if(h == 13) {
    h = 1;
    if (timeOfDay == "am") {
      timeOfDay = "pm";
    } else {
      timeOfDay = "am";
    }
  }
}
